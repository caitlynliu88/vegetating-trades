# -*- coding: utf-8 -*-
"""7_Python_for_Web_Science__Homework_LIU_Group4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1em2HxZQFCdVhf3ToFT4IvxBloN2xsdu7

# **Set-Up**
"""

from pprint import pprint as pp

import os
os.chdir('/content/')
!git clone https://github.com/jesstess/Wordplay.git
os.chdir('/content/Wordplay')

from scrabble import wordlist

from  re import search

"""# Homework 
Unless otherwise stated, use regular expressions  to solve each of these problems.

###  1)  
Make a list of the words that end in "mt"  and print it.
"""

# Print list of words that end in "mt"
for word in wordlist:
  if search('mt$', word): 
    print( word )

"""###  2)  
Make a list of the words  that contain 4 or more 'l's  and print it.
"""

### when you do 5 L's is prints 0 because there are only 4 "L" tiles in scrabble
### polysyllabically has 5 "L"s in the word
### Analyzing data can sometimes be constrained by the data set - think about your edge cases

# Print list of words that contain 4 or more "l"
for word_l in wordlist: #for every word in wordlist
  if search('l.*l.*l.*l', word_l):
    print(word_l)
    
# HW Review 6/5

'''
for word in wordlist:
  if search('.*l.*l.*l.*l.*', word): #infinite amount of anything, "L", then infinite amount of anything
    print(word)
'''

# Print list of words that contain 4 or more "l"
for word_l in wordlist: #for every word in wordlist
  if search('(l.*){4,}', word_l): #didn't teach in class
    print(word_l)

"""### 3)
Make and print  a list of the words that
  1.  have all 5 vowels.
    * *I haven't taught you to do this with regex. You don't have to, you can use the above solution. If you try regexes, start by learning about the role of square brackets.*
  1.  have all 5 vowels in alphabetical order. 
  1.  have all 5 vowels in alphabetical order and end in  'y'.
"""

# HW Review 6/5, from Lesson 

'''
vowels = ['a','e','i','o','u']

for word in wordlist:
  all_vowels = True #initializing
  for vowel in vowels:
    if vowel not in word:
      all_vowels = False #becomes false if the vowels not in the word, skips the next if statement
  if all_vowels:
    print(word + " has all the vowels")
'''

### has all 5 vowels, any order
for word_v in wordlist:
  if 'a' in word_v:
    if 'e' in word_v:
      if 'i' in word_v:
        if 'o' in word_v:
          if 'u' in word_v:
            print(word_v)

### have all 5 vowels in alphabetical order

for word_v2 in wordlist:
  if search('a.*e.*i.*o.*u.*', word_v2):
    print(word_v2)
    
### if search('^[^aeiou]*a[^aeiou]*e[^aeiou]*i[^aeiou]*o[^aeiou]*u[^aeiou]*$', word)
### ^ filters out vowels in between aeiou as well as removing repeated vowels in between
### ^ replaces the '.'; ^ means not
### square brackets [] mean just the vowels (whats inside the brackets) 
### will return words that ONLY have aeiou in order with no repeating vowels

### have all 5 vowels in alphabetical order and end in 'y'
for word_v3 in wordlist:
  if search('a.*e.*i.*o.*u.*y$', word_v3):
    print(word_v3)

"""### 4)
Create a dictionary whose  keys are the letters of the alphabet and whose values are  the number of words that end with that letter.   Assign the dictionary to a variable called `word_endings`.  Confirm that the sum of the resulting counts equals the total number  of words in `wordlist`
"""

word_endings = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 
                'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0}

for alph_word in wordlist:
  for letter,counter_al in word_endings.items():
    if search(letter + '$', alph_word ):
      word_endings[letter] += 1
pp(word_endings)
print(len(wordlist))

"""### 5)  

In the game *Scrabble*, players are given several letter tiles and challenged to think of words that use them.  Letters have different point values, with more rare letters being worth more:
```
scores = {'a': 1, 'b': 3, 'c': 3, 'd': 2, 'e': 1, 'f': 4, 'g': 2, 'h': 4, 'i': 1, 'j': 8, 'k': 5, 'l': 1, 'm': 3, 'n': 1, 'o': 1, 'p': 3, 'q': 10, 'r': 1, 's': 1, 't': 1, 'u': 1, 'v': 4, 'w': 4, 'x': 8, 'y': 4, 'z': 10}
 ```
You are given the following letter tiles:
```
['t', 'm', 'q',  'z',  'u', 'u', 'p', 'e', 'i', 'c']
```
Use `wordlist` to figure out the highest scoring  word you  can form from  these letters.  You might not  use regular expressions to solve  this. 


You can  use a mix  of Python and verbal exposition; you don't have   to actually use the `scores` dictionary or the lettter tile  list.
"""

### easiest solution, HW Review 6/5
'''
hand = ['t', 'm', 'q',  'z',  'u', 'u', 'p', 'e', 'i', 'c']
for word in wordlist:
  if 'q' in word and 'z' in word and 'm' in word:
    print(word)
'''
# then manually go though and pick out which one is the highest points

### function borrowed from https://stackoverflow.com/questions/22187988/check-if-all-letters-of-string-are-contained-in-list-of-letters-in-python
from collections import Counter

def validWord(word, letterList):
    word2, word1 = Counter(word), Counter(letterList)
    return all(word2[k] <= word1.get(k, 0) for k in word2)

new_list = []
for word in wordlist: 
  if validWord(word,['t', 'm', 'q',  'z',  'u', 'u', 'p', 'e', 'i', 'c']) == True:
    new_list.append(word)
for answer in new_list:
  if len(answer) >= 6: #we want the most number of tiles to get us more points
    print(answer)
print()
print("mezquit is worth 27 points. Use that word!")

"""### 6) 
You are playing the Sunday crossword puzzle but the hints are awful and you are stuck.  If you can solve  the long word, you'll have a chance  at the rest of the puzzle.  Here  is how much of it you have figured out:
![Slow grow](https://enfascination.com/cloud/index.php/s/XZqFYpsLFwqjmYL/download)

The hint is "*a growth*". What's the word?
"""

for word_cross in wordlist:
  if search('^.o....thm..$', word_cross):
    print(word_cross)

"""### 7) CHALLENGE
What words have the longest string of consecutive characters of the alphabet?  How long are the longest stretches?  What letter ranges do they cover?
"""

#Franklin Shih